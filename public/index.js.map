{"mappings":"MAAO,SAASA,EAAkBC,EAAQC,GAExC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAEjC,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAOE,OAAQC,IAIjC,GAAIJ,EAAOE,KAAOD,EAAOG,GAEvB,OAAO,EAKb,OAAO,CACT,CCVA,MAAMC,EACJC,qBAAuB,CACrBC,OAAQ,GACRC,OAAQ,IAOVC,YAAYC,EAAIC,GAMdC,KAAKF,GAAKA,EACVE,KAAKD,OAASA,EACdC,KAAKC,IAAMD,KAAKE,OACZJ,EAAGK,cAAcC,WAAW,KAC9BX,EAAaY,cAAcV,OAAOW,KAAKN,MAC9BF,EAAGK,cAAcC,WAAW,MACrCX,EAAaY,cAAcT,OAAOU,KAAKN,MAEzCA,KAAKC,IAAIM,iBAAiB,QAASP,KAAKQ,gBAC1C,CAMAN,KAAO,KAG0C,IAA7CT,EAAaY,cAAcV,OAAOJ,QACW,IAA7CE,EAAaY,cAAcT,OAAOL,QAElCkB,SAASC,cAAc,wBAAwBC,UAAUC,OAAO,UAGlEH,SAASC,cAAc,qBAAqBG,mBAC1C,YACA,8DACUb,KAAKD,6DAIVU,SAASC,cAAc,qBAAqBI,WAOrDN,gBAAkB,KAGhBC,SAASC,cAAc,IAAIV,KAAKF,MAAMiB,SAAU,EAEhDC,EAAOC,mBAAmB,GAAGC,YAG7BlB,KAAKmB,QAAM,EASbA,OAAS,KAEPnB,KAAKC,IAAImB,WAAWC,YAAYrB,KAAKC,KAIrCR,EAAaY,cAAcV,OACzBF,EAAaY,cAAcV,OAAOI,QAAQuB,GAAMA,EAAExB,KAAOE,KAAKF,KAChEL,EAAaY,cAAcT,OACzBH,EAAaY,cAAcT,OAAOG,QAAQuB,GAAMA,EAAExB,KAAOE,KAAKF,KAGjB,IAA7CL,EAAaY,cAAcV,OAAOJ,QACW,IAA7CE,EAAaY,cAAcT,OAAOL,QAElCkB,SAASC,cAAc,wBAAwBC,UAAUY,IAAI,W,IAInEC,EAAe/B,ECxFf,MAAMgC,EAKJ/B,oBAAsB,CACpBgC,SAAU,MACVC,MAAO,GACPC,MAAO,IAGTlC,0BAA4B,GAC5BA,uBAAyB,GACzBA,kBAAoB,SAUpBG,cACEG,KAAKC,IAAMQ,SAASC,cAAc,iBAClCV,KAAK6B,qBACL7B,KAAK8B,wBACL9B,KAAK+B,iBACL/B,KAAKgC,YAAc,IAAIvB,SAASwB,iBAAiB,kBACjDjC,KAAKkC,iBAAmB,IAAIlC,KAAKgC,aACjCP,EAAOR,mBAAmBX,KAAKN,MAC/BA,KAAKmC,mBACP,CAEAN,qBACE7B,KAAKC,IAAIgC,iBAAiB,iBAAiBG,SAASC,IAClDA,EAAQ9B,iBAAiB,SAAU+B,IACjCtC,KAAKC,IAAIgC,iBAAiB,iBAAiBG,SAASC,IAClDA,EAAQ1B,UAAUC,OAAO,oBAE3B0B,EAAEC,OAAO5B,UAAUY,IAAI,iBAEvBE,EAAOe,aAAad,SAAWY,EAAEC,OAAOE,QAAQ1C,OAChDC,KAAK0C,gBAAc,GACrB,GAEJ,CAUAZ,sBAAwB,KAoDtB,SAASa,EAAYL,EAAGM,GACJ,UAAdA,GACFN,EAAEC,OAAO7B,cAAc,aAAaC,UAAUY,IAAI,mBAClDe,EAAEC,OAAO7B,cAAc,aAAaC,UAAUC,OAAO,kBAC9B,SAAdgC,GACTN,EAAEC,OAAO7B,cAAc,aAAaC,UAAUY,IAAI,iBAClDe,EAAEC,OAAO7B,cAAc,aAAaC,UAAUC,OAAO,oBAC9B,aAAdgC,GACTnC,SACGwB,iBAAiB,0BACjBG,SAASC,IACRA,EACG3B,cAAc,aACdC,UAAUC,OAAO,iBACpByB,EAAQ3B,cAAc,aAAaC,UAAUY,IAAI,qBAGzD,CApEAd,SAASwB,iBAAiB,kBAAkBG,SAASC,IACnDA,EAAQ9B,iBAAiB,SAAU+B,IAC7BA,EAAEC,OAAOM,mBAAmBlC,UAAUmC,SAAS,WACjDH,EAAYL,EAAG,YACf7B,SACGwB,iBAAiB,yBACjBG,SAASC,IACRA,EAAQ1B,UAAUY,IAAI,aAE1Be,EAAEC,OAAOM,mBAAmBlC,UAAUC,OAAO,UAC7C+B,EAAYL,EAAG,UAEfA,EAAEC,OAAOM,mBAAmBlC,UAAUY,IAAI,UAC1CoB,EAAYL,EAAG,SACjB,GACF,IAEF7B,SAASsC,KAAKxC,iBAAiB,SAAU+B,IAEpC7B,SACEuC,kBAAkBV,EAAEW,QAASX,EAAEY,SAC/BC,MAAM7B,GAAMA,EAAEX,UAAUmC,SAAS,2BACnCR,EAAEC,OAAO5B,UAAUmC,SAAS,2BAE7BH,EAAYL,EAAG,YACf7B,SACGwB,iBAAiB,yBACjBG,SAASC,IACRA,EAAQ1B,UAAUY,IAAI,aAE5B,IAGFd,SACGC,cAAc,wBACdH,iBAAiB,QAASP,KAAKoD,cAClC3C,SACGC,cAAc,2BACdH,iBAAiB,QAASP,KAAKqD,aAClC5C,SACGC,cAAc,2BACdH,iBAAiB,QAASP,KAAKsD,aAClC7C,SAASwB,iBAAiB,mBAAmBG,SAASC,IACpDA,EAAQ9B,iBAAiB,SAAUP,KAAKkB,WACxCmB,EAAQ9B,iBAAiB,SAAUP,KAAKuD,qBAAoB,IAE9D9C,SAASwB,iBAAiB,mBAAmBG,SAASC,IACpDA,EAAQ9B,iBAAiB,SAAUP,KAAKkB,WACxCmB,EAAQ9B,iBAAiB,SAAUP,KAAKwD,qBAAoB,GAoB9D,EAcFJ,aAAe,KAEb3C,SAASwB,iBAAiB,mBAAmBG,SAASC,IAChDA,EAAQtB,UACVsB,EAAQtB,SAAU,EAAK,IAG3BN,SAASwB,iBAAiB,mBAAmBG,SAASC,IAChDA,EAAQtB,UACVsB,EAAQtB,SAAU,EAAK,IAI3BU,EAAOe,aAAaZ,MAAQ,GAC5BH,EAAOe,aAAab,MAAQ,GAE5BlB,SAASwB,iBAAiB,yBAAyBG,SAASC,IAC1DA,EAAQ1B,UAAUY,IAAI,aAGxB,IAAK,MAAMkC,KAAOjC,EAAanB,cAC7BmB,EAAanB,cAAcoD,GAAKrB,SAASC,IACvCA,EAAQlB,QAAM,IAIlBnB,KAAK0C,gBAAc,EAQrBW,YAAc,KAEZ5C,SAASwB,iBAAiB,mBAAmBG,SAASC,IAChDA,EAAQtB,UACVsB,EAAQtB,SAAU,EAAK,IAI3BS,EAAanB,cAAcV,OAAOyC,SAASC,IACzCA,EAAQlB,QAAM,IAGhBM,EAAOe,aAAaZ,MAAQ,GAE5B5B,KAAK0C,gBAAc,EAOrBY,YAAc,KAEZ7C,SAASwB,iBAAiB,mBAAmBG,SAASC,IAChDA,EAAQtB,UACVsB,EAAQtB,SAAU,EAAK,IAI3BS,EAAanB,cAAcT,OAAOwC,SAASC,IACzCA,EAAQlB,QAAM,IAGhBM,EAAOe,aAAab,MAAQ,GAE5B3B,KAAK0C,gBAAc,EAUrBa,qBAAwBjB,IACtB,GAAIA,EAAEC,OAAOxB,QAGX,IAAIS,EAAac,EAAEC,OAAOzC,GAAIwC,EAAEC,OAAOM,mBAAmBa,eACrD,CACL,MAAMC,EAAWrB,EAAEC,OAAOzC,GAE1B0B,EAAanB,cAAcV,OAAOwD,MAAM7B,GAAMA,EAAExB,IAAM6D,IAAUxC,QAClE,GAOFqC,qBAAwBlB,IACtB,GAAIA,EAAEC,OAAOxB,QACX,IAAIS,EAAac,EAAEC,OAAOzC,GAAIwC,EAAEC,OAAOM,mBAAmBa,eACrD,CACL,MAAMC,EAAWrB,EAAEC,OAAOzC,GAE1B0B,EAAanB,cAAcT,OAAOuD,MAAM7B,GAAMA,EAAExB,IAAM6D,IAAUxC,QAClE,GASFD,UAAY,KAEVO,EAAOe,aAAaZ,MAAQ,GAC5BnB,SAASwB,iBAAiB,mBAAmBG,SAASC,IAChDA,EAAQtB,SACVU,EAAOe,aAAaZ,MAAMtB,KAAK+B,EAAQvC,GAAE,IAI7C2B,EAAOe,aAAab,MAAQ,GAC5BlB,SAASwB,iBAAiB,mBAAmBG,SAASC,IAChDA,EAAQtB,SACVU,EAAOe,aAAab,MAAMrB,KAAK+B,EAAQvC,GAAE,IAG7CE,KAAK0C,gBAAc,EASrBA,eAAiB,KACf1C,KAAKgC,YAAYI,SAASC,IAUxB,GATAA,EAAQ1B,UAAUC,OAAO,UAGrBa,EAAOe,aAAab,MAAMpC,OAAS,IAChCkC,EAAOe,aAAab,MAAMiC,SAASvB,EAAQI,QAAQd,QACtDU,EAAQ1B,UAAUY,IAAI,WAItBE,EAAOe,aAAaZ,MAAMrC,OAAS,EAAG,CAEnCJ,EADiBkD,EAAQI,QAAQb,MAAMiC,MAAM,KACZpC,EAAOe,aAAaZ,QACxDS,EAAQ1B,UAAUY,IAAI,SAE1B,CAEoC,OAAhCE,EAAOe,aAAad,UAClBW,EAAQI,QAAQf,UAAYD,EAAOe,aAAad,UAClDW,EAAQ1B,UAAUY,IAAI,SACxB,IAGJvB,KAAKmC,oBACL1B,SAASC,cAAc,gBAAgBC,UAAUY,IAAI,UACc,IAAnEd,SAASwB,iBAAiB,8BAA8B1C,QACpDkB,SAASC,cAAc,gBAAgBC,UAAUC,OAAO,WAS9DmB,iBACEtB,SAASwB,iBAAiB,eAAeG,SAASC,IAChDA,EAAQ9B,iBAAiB,SAAUP,KAAK8D,aAAY,GAExD,CAQAA,aAAgBxB,IAEd,OADAb,EAAOsC,WAAazB,EAAEC,OAAOzC,GACrB2B,EAAOsC,YACb,IAAK,UACH/D,KAAKgC,YAAchC,KAAKgC,YAAYgC,MAAK,SAAUC,EAAGC,GACpD,OAAOC,SAASF,EAAExB,QAAQ2B,QAAUD,SAASD,EAAEzB,QAAQ2B,OACnD,GACA,CACN,IACA,MAEF,IAAK,UACHpE,KAAKgC,YAAchC,KAAKgC,YAAYgC,MAAK,SAAUC,EAAGC,GACpD,OAAOC,SAASF,EAAExB,QAAQ2B,QAAUD,SAASD,EAAEzB,QAAQ2B,OACnD,GACA,CACN,IACA,MACF,IAAK,SACHpE,KAAKgC,YAAchC,KAAKgC,YAAYgC,MAAK,SAAUC,EAAGC,GACpD,OAAOC,SAASF,EAAExB,QAAQ3C,KAAOqE,SAASD,EAAEzB,QAAQ3C,IAAM,GAAI,CAChE,IACA,MACF,IAAK,SACHE,KAAKgC,YAAchC,KAAKgC,YAAYgC,MAAK,SAAUC,EAAGC,GACpD,OAAOC,SAASF,EAAExB,QAAQ3C,KAAOqE,SAASD,EAAEzB,QAAQ3C,IAAM,GAAI,CAChE,IACA,MACF,IAAK,cACHE,KAAKgC,YAAchC,KAAKgC,YAAYgC,MAAK,SAAUC,EAAGC,GACpD,OAAOC,SAASF,EAAExB,QAAQ4B,SAAWF,SAASD,EAAEzB,QAAQ4B,QACpD,GACA,CACN,IACA,MACF,QACEC,QAAQC,IAAI,4BAIhB9D,SAASC,cAAc,mBAAmBgD,UAAY,GAEtD1D,KAAKgC,YAAYI,SAASC,IACxB5B,SACGC,cAAc,mBACd8D,sBAAsB,YAAanC,EAAA,GACxC,EAGFF,kBAAoB,KAClB1B,SAASwB,iBAAiB,mBAAmBG,SAASC,IACpDA,EAAQ1B,UAAUC,OAAO,eAE3BH,SAASwB,iBAAiB,mBAAmBG,SAASC,IACpDA,EAAQoC,UAAW,CAAK,IAE1BhE,SAASwB,iBAAiB,mBAAmBG,SAASC,IACpDA,EAAQoC,UAAW,CAAK,IAE1BhE,SAASwB,iBAAiB,gBAAgBG,SAASC,IACjD,MAAMvC,EAAKuC,EAAQqC,cAAchE,cAAc,oBAAoBZ,GAC/DuC,EAAQqC,cAAchE,cAAc,mBAAmBZ,GACvDuC,EAAQqC,cAAchE,cAAc,mBAAmBZ,GACrD6E,EAAe3E,KAAK4E,aAAa9E,GAEpB,IAAjB6E,GACCtC,EAAQqC,cAAcG,kBAAkBA,kBAAkB9D,UAE3DsB,EAAQqC,cAAc/D,UAAUY,IAAI,YACpCc,EAAQqC,cAAchE,cACpB,mBACAmE,kBAAkBJ,UAAW,GAEjCpC,EAAQqB,UAAY,GAAGiB,GAAc,GAEvC,EAGFC,aAAa9E,GACX,IAAIgF,EAAQ,EACRC,EAC+B,QAAjCtD,EAAOe,aAAad,SAChB,IAAI1B,KAAKgC,aACThC,KAAKgC,YAAYjC,QACduB,GAAMA,EAAEmB,QAAQf,WAAaD,EAAOe,aAAad,WAyB1D,OAtBI5B,EAAGM,WAAW,MACZqB,EAAOe,aAAab,MAAMpC,OAAS,IACrCwF,EAAMA,EAAIhF,QAAQuB,GAChBG,EAAOe,aAAab,MAAMiC,SAAStC,EAAEmB,QAAQd,UAGjDoD,EAAMA,EAAIhF,QAAQuB,GAAMA,EAAEmB,QAAQb,MAAMiC,MAAM,KAAKD,SAAS9D,KAC5DgF,EAAQC,EAAIxF,QAGLO,EAAGM,WAAW,OACjBqB,EAAOe,aAAaZ,MAAMrC,OAAS,IACrCwF,EAAMA,EAAIhF,QAAQuB,GAChBnC,EACEsC,EAAOe,aAAaZ,MACpBN,EAAEmB,QAAQb,MAAMiC,MAAM,SAI5BkB,EAAMA,EAAIhF,QAAQuB,GAAMA,EAAEmB,QAAQd,QAAU7B,IAC5CgF,EAAQC,EAAIxF,QAEPuF,CACT,E,IAOF9D,EAAeS,EC7af,IAAIuD,OAAO,WAAY,CACrBC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,yBAIZ,IAAIC,GAAO,EACX,IAAIC,EAASL,OAEb,SAASM,IACHC,OAAOC,YAAc,IAClBJ,IACHA,GAAO,EACPC,EAAS,IAAIL,OAAO,aAEbI,IACTC,EAAOI,UACPL,GAAO,EAEX,CACAE,IACAC,OAAOhF,iBAAiB,SAAU+E,GAEf,IAAItE,EAuBvB,SAAS0E,IACPjF,SAASC,cAAc,yBAAyBC,UAAUgF,OAAO,QAE/DlF,SAASC,cAAc,yBAAyBC,UAAUmC,SAAS,SAEnErC,SAASsC,KAAK6C,MAAMC,SAAW,SAC/BpF,SAASC,cAAc,YAAYkF,MAAME,QAAU,EACnDrF,SAASC,cAAc,YAAYkF,MAAMG,cAAgB,MACzDtF,SAASC,cAAc,mBAAmBC,UAAUC,OAAO,WAC3DH,SACGC,cAAc,mBACdC,UAAUY,IAAI,uBAEjBd,SAASsC,KAAK6C,MAAMC,SAAW,OAC/BpF,SAASC,cAAc,YAAYkF,MAAME,QAAU,EACnDrF,SAASC,cAAc,YAAYkF,MAAMG,cAAgB,OACzDtF,SAASC,cAAc,mBAAmBC,UAAUY,IAAI,WACxDd,SACGC,cAAc,mBACdC,UAAUC,OAAO,qBAExB,CAEA,SAASoF,IAELvF,SAASC,cAAc,yBAAyBC,UAAUmC,SAAS,UAEnErC,SAASC,cAAc,yBAAyBC,UAAUC,OAAO,QACjEH,SAASsC,KAAK6C,MAAMC,SAAW,OAC/BpF,SAASC,cAAc,YAAYkF,MAAME,QAAU,EACnDrF,SAASC,cAAc,YAAYkF,MAAMG,cAAgB,OACzDtF,SAASC,cAAc,mBAAmBC,UAAUY,IAAI,WACxDd,SACGC,cAAc,mBACdC,UAAUC,OAAO,qBAExB,CAxDAH,SACGC,cAAc,mBACdH,iBAAiB,QAASmF,GAC7BjF,SACGC,cAAc,oBACdH,iBAAiB,QAASmF,GAC7BjF,SACGC,cAAc,wBACdH,iBAAiB,QAASmF,GAC7BjF,SACGC,cAAc,uBACdH,iBAAiB,QAASmF,GAC7BjF,SACGC,cAAc,YACdH,iBAAiB,QAASmF,GAE7BjF,SAASwB,iBAAiB,aAAaG,SAASC,IAC9CA,EAAQ9B,iBAAiB,QAASyF,EAAA,IA2CpCvF,SAASwB,iBAAiB,eAAeG,SAASC,IAChDA,EAAQ9B,iBAAiB,SAAU+B,IACjC7B,SACGuC,kBAAkBV,EAAEW,QAASX,EAAEY,SAC/BnD,QAAQuB,GAAMA,EAAEX,UAAUmC,SAAS,kBAAiB,GACpDpC,cAAc,kBACduF,WAAS,GAEd,IAGFxF,SAASwB,iBAAiB,UAAUG,SAASC,IAC3CA,EAAQ9B,iBAAiB,SAAU+B,IACjCA,EAAEC,OAAO2D,QAAQ,kBAAkBC,OAAK,GAE1C,IAGFZ,OAAOhF,iBAAiB,SAAU+B,IAC5BA,EAAEC,OAAO5B,UAAUmC,SAAS,kBAC9BR,EAAEC,OAAO4D,OAAK,IAQlB,IAAIC,EAAgB,EACpBb,OAAOhF,iBAAiB,UAAU,SAAU+B,GAC1C,MAAM+D,EACJ5F,SAASsC,KAAKsD,WAAa5F,SAAS6F,gBAAgBD,UAEpDE,EAAUX,MAAMY,QADdH,EAAYD,EACY,QAEA,OAE5BA,EAAgBC,CAClB,IAGA,MAAME,EAAY9F,SAASC,cAAc,uBACzC6E,OAAOhF,iBAAiB,UAAU,SAAU+B,GAExC7B,SAASsC,KAAKsD,UAAY,KAC1B5F,SAAS6F,gBAAgBD,UAAY,IAErCE,EAAUX,MAAMY,QAAU,QAE1BD,EAAUX,MAAMY,QAAU,MAE9B,G","sources":["js/helper.js","js/SubFilterBtn.js","js/Filter.js","js/index.js"],"sourcesContent":["export function findCommonElement(array1, array2) {\n  // Loop for array1\n  for (let i = 0; i < array1.length; i++) {\n    // Loop for array2\n    for (let j = 0; j < array2.length; j++) {\n      // Compare the element of each and\n      // every element from both of the\n      // arrays\n      if (array1[i] === array2[j]) {\n        // Return if common element found\n        return true;\n      }\n    }\n  }\n  // Return if no common element exist\n  return false;\n}\n","import Filter from \"./Filter\";\n\n/**\n * Creates the active filter buttons that appear when filter is chosen. <br>\n * Styling is done by scss\n */\nclass SubFilterBtn {\n  static activeFilters = {\n    colors: [],\n    brands: [],\n  };\n\n  /**\n   * @param {string} id id given by main Filter. eg \"c1\" for black or \"b2\" for Nuphy.\n   * @param {string} filter InnerHTML of specific label -> will be visible to user. eg \"black\" or \"Nuphy\".\n   */\n  constructor(id, filter) {\n    /**\n     * @property {string} id Filter id of subfilterBtn\n     * @property {string} filter Visible name of subfilterBtn\n     * @property {htmlRef} ref Will always point to exact DOM location of this Btn\n     */\n    this.id = id;\n    this.filter = filter;\n    this.ref = this.init();\n    if (id.toLowerCase().startsWith(\"c\")) {\n      SubFilterBtn.activeFilters.colors.push(this);\n    } else if (id.toLowerCase().startsWith(\"b\")) {\n      SubFilterBtn.activeFilters.brands.push(this);\n    }\n    this.ref.addEventListener(\"click\", this.singleBtnDelete);\n  }\n\n  /**\n   * @property {function} init creates and inserts div before end with proper values. Also checks whether \"Clear all\" btn should be visible.\n   * @returns {htmlRef} Looks for lastChild within parent div of Btns\n   */\n  init = () => {\n    // Check if \"clear all\" btn should be visible\n    if (\n      SubFilterBtn.activeFilters.colors.length === 0 &&\n      SubFilterBtn.activeFilters.brands.length === 0\n    ) {\n      document.querySelector(\".subfilter-btn-clear\").classList.remove(\"hidden\");\n    }\n    // Create button\n    document.querySelector(\".subfilter-active\").insertAdjacentHTML(\n      \"beforeend\",\n      `<div class=\"active-filter-btn visibleBtns\">\n        <span>${this.filter}</span>\n        <span>&times;</span>\n      </div>`\n    );\n    return document.querySelector(\".subfilter-active\").lastChild;\n  };\n\n  /**\n   * @property {function} singleBtnDelete takes care of the checkboxes and main filter of website\n   * @returns {void}\n   */\n  singleBtnDelete = () => {\n    // MAIN FILTER-----\n    // Uncheck checkbox within filter\n    document.querySelector(`#${this.id}`).checked = false;\n    // Rerun filter function in main Filter\n    Filter.filterWalkieTalkie[0].subFilter();\n    // SUB FILTER-----\n    // Delete btn\n    this.delete();\n  };\n\n  /**\n   * @property {function} delete\n   * Deletes DOM element <br>\n   * Filters out activeFilter from static activeFilters and if last btn is deleted, also hides \"clear All\"\n   * @returns {void}\n   */\n  delete = () => {\n    // Remove Btn from DOM\n    this.ref.parentNode.removeChild(this.ref);\n    // delete filter from activeFilter Object\n\n    // IF ELSE BRAND COLOR\n    SubFilterBtn.activeFilters.colors =\n      SubFilterBtn.activeFilters.colors.filter((x) => x.id !== this.id);\n    SubFilterBtn.activeFilters.brands =\n      SubFilterBtn.activeFilters.brands.filter((x) => x.id !== this.id);\n    // check if \"clear All\" should be deleted as well\n    if (\n      SubFilterBtn.activeFilters.colors.length === 0 &&\n      SubFilterBtn.activeFilters.brands.length === 0\n    ) {\n      document.querySelector(\".subfilter-btn-clear\").classList.add(\"hidden\");\n    }\n  };\n}\nexport default SubFilterBtn;\n","import { findCommonElement } from \"./helper\";\nimport SubFilterBtn from \"./SubFilterBtn.js\";\nimport \"animate.css\";\n\n/**\n * Creates the filter <br>\n * Styling is done by scss\n */\nclass Filter {\n  /**\n   * static object that keeps track of all filters.\n   * @type {{category: string, brand: Array, color:Array}}\n   */\n  static globalFilter = {\n    category: \"All\",\n    brand: [],\n    color: [],\n  };\n\n  static filterWalkieTalkie = [];\n  static elementsPerPage = 20;\n  static sortOption = \"dateNO\";\n\n  /**\n   * @property {HTMLref} ref points to where main filter location is in website\n   * @property {function} generateFilterBtns adds event listeners to main category btns\n   * @property {function} generateSubFilterBtns adds event listeners to sub category btns\n   * @property {function} generateSorter adds event listeners to sorter options btn\n   * @property {DOMarray} allProducts stores all products that were generated by PHP in dom array\n   * @property {function} sortProducts launches sortProducts in order to have a max of X products on screen\n   */\n  constructor() {\n    this.ref = document.querySelector(\".filter__list\");\n    this.generateFilterBtns();\n    this.generateSubFilterBtns();\n    this.generateSorter();\n    this.allProducts = [...document.querySelectorAll(\".product-card\")];\n    this.allProductsArray = [...this.allProducts];\n    Filter.filterWalkieTalkie.push(this);\n    this.updateFilterCount();\n  }\n\n  generateFilterBtns() {\n    this.ref.querySelectorAll(\".filter__item\").forEach((element) => {\n      element.addEventListener(\"click\", (e) => {\n        this.ref.querySelectorAll(\".filter__item\").forEach((element) => {\n          element.classList.remove(\"active-filter\");\n        });\n        e.target.classList.add(\"active-filter\");\n\n        Filter.globalFilter.category = e.target.dataset.filter;\n        this.filterProducts();\n      });\n    });\n  }\n\n  /**\n   * @property {function} generateSubFilterBtns\n   * Adds eventlistener click to subfilter btns <br>\n   * -> Open en close subfilter selection <br>\n   * -> Change arrow direction <br>\n   * Includes seperate \"changeArrow\" function<br>\n   * @returns {void}\n   */\n  generateSubFilterBtns = () => {\n    document.querySelectorAll(\".subfilter-btn\").forEach((element) => {\n      element.addEventListener(\"click\", (e) => {\n        if (e.target.nextElementSibling.classList.contains(\"hidden\")) {\n          arrowSwitch(e, \"allClose\");\n          document\n            .querySelectorAll(\".subfilter__selection\")\n            .forEach((element) => {\n              element.classList.add(\"hidden\");\n            });\n          e.target.nextElementSibling.classList.remove(\"hidden\");\n          arrowSwitch(e, \"open\");\n        } else {\n          e.target.nextElementSibling.classList.add(\"hidden\");\n          arrowSwitch(e, \"close\");\n        }\n      });\n    });\n    document.body.addEventListener(\"click\", (e) => {\n      if (\n        !document\n          .elementsFromPoint(e.clientX, e.clientY)\n          .find((x) => x.classList.contains(\"subfilter__selection\")) &&\n        !e.target.classList.contains(\"general-subfilter-btn\")\n      ) {\n        arrowSwitch(e, \"allClose\");\n        document\n          .querySelectorAll(\".subfilter__selection\")\n          .forEach((element) => {\n            element.classList.add(\"hidden\");\n          });\n      }\n    });\n\n    document\n      .querySelector(\".subfilter-btn-clear\")\n      .addEventListener(\"click\", this.clearFilters);\n    document\n      .querySelector(\".subfilter__clear-color\")\n      .addEventListener(\"click\", this.clearColors);\n    document\n      .querySelector(\".subfilter__clear-brand\")\n      .addEventListener(\"click\", this.clearBrands);\n    document.querySelectorAll(\".color-checkbox\").forEach((element) => {\n      element.addEventListener(\"change\", this.subFilter);\n      element.addEventListener(\"change\", this.toggleActiveColorBtn);\n    });\n    document.querySelectorAll(\".brand-checkbox\").forEach((element) => {\n      element.addEventListener(\"change\", this.subFilter);\n      element.addEventListener(\"change\", this.toggleActiveBrandBtn);\n    });\n\n    function arrowSwitch(e, direction) {\n      if (direction === \"close\") {\n        e.target.querySelector(\".fa-solid\").classList.add(\"fa-chevron-down\");\n        e.target.querySelector(\".fa-solid\").classList.remove(\"fa-chevron-up\");\n      } else if (direction === \"open\") {\n        e.target.querySelector(\".fa-solid\").classList.add(\"fa-chevron-up\");\n        e.target.querySelector(\".fa-solid\").classList.remove(\"fa-chevron-down\");\n      } else if (direction === \"allClose\") {\n        document\n          .querySelectorAll(\".general-subfilter-btn\")\n          .forEach((element) => {\n            element\n              .querySelector(\".fa-solid\")\n              .classList.remove(\"fa-chevron-up\");\n            element.querySelector(\".fa-solid\").classList.add(\"fa-chevron-down\");\n          });\n      }\n    }\n  };\n\n  /**\n   * @property {function} clearFilters\n   * clears all checkboxes <br>\n   * clear globalFilter <br>\n   * close all open subfilter options <br>\n   * close all open subfilter options <br>\n   * delete all dom elements (by looping over activefilters within SubfilterBtn class and evoke delete()) <br>\n   * Finally filters products again\n   *\n   * @returns {void}\n   */\n  clearFilters = () => {\n    // Clearing checkboxes\n    document.querySelectorAll(\".color-checkbox\").forEach((element) => {\n      if (element.checked) {\n        element.checked = false;\n      }\n    });\n    document.querySelectorAll(\".brand-checkbox\").forEach((element) => {\n      if (element.checked) {\n        element.checked = false;\n      }\n    });\n    // Clearing globalFilter\n    Filter.globalFilter.color = [];\n    Filter.globalFilter.brand = [];\n    // close all\n    document.querySelectorAll(\".subfilter__selection\").forEach((element) => {\n      element.classList.add(\"hidden\");\n    });\n    // Delete all SubfilterBtn DOM elements\n    for (const key in SubFilterBtn.activeFilters) {\n      SubFilterBtn.activeFilters[key].forEach((element) => {\n        element.delete();\n      });\n    }\n    // Filter products\n    this.filterProducts();\n  };\n\n  /**\n   * @property {function} clearColors\n   * Same functionality as clearFilters but only for colors\n   * @returns {void}\n   */\n  clearColors = () => {\n    // All checkboxes on false colors\n    document.querySelectorAll(\".color-checkbox\").forEach((element) => {\n      if (element.checked) {\n        element.checked = false;\n      }\n    });\n    // Delete all activeFilter btns colors\n    SubFilterBtn.activeFilters.colors.forEach((element) => {\n      element.delete();\n    });\n    // Empty GlobalFilter color\n    Filter.globalFilter.color = [];\n    // Run filter\n    this.filterProducts();\n  };\n  /**\n   * @property {function} clearBrands\n   * Same functionality as clearFilters and clearColors but only for colors\n   * @returns {void}\n   */\n  clearBrands = () => {\n    // All checkboxes on false brands\n    document.querySelectorAll(\".brand-checkbox\").forEach((element) => {\n      if (element.checked) {\n        element.checked = false;\n      }\n    });\n    // Delete all activeFilter btns brands\n    SubFilterBtn.activeFilters.brands.forEach((element) => {\n      element.delete();\n    });\n    // Empty GlobalFilter brand\n    Filter.globalFilter.brand = [];\n    // run filter\n    this.filterProducts();\n  };\n  /**\n   * @property {function} toggleActiveColorBtn\n   * toggles this specific filter Btn on or off <br>\n   * checks whether e.target is checked. <br>\n   * If yes -> new SubFilterBtn <br>\n   * If no -> find this Btn in activeFilters and call delete().\n   * @returns {void}\n   */\n  toggleActiveColorBtn = (e) => {\n    if (e.target.checked) {\n      // In fact SubFilterBtn class should choose where to put new btn.\n\n      new SubFilterBtn(e.target.id, e.target.nextElementSibling.innerHTML);\n    } else {\n      const targetId = e.target.id;\n      // Delete div from DOM\n      SubFilterBtn.activeFilters.colors.find((x) => x.id == targetId).delete();\n    }\n  };\n  /**\n   * @property {function} toggleActiveBrandBtn\n   * Same functionality as toggleColorBtn but for brands\n   * @returns {void}\n   */\n  toggleActiveBrandBtn = (e) => {\n    if (e.target.checked) {\n      new SubFilterBtn(e.target.id, e.target.nextElementSibling.innerHTML);\n    } else {\n      const targetId = e.target.id;\n      // Delete div from DOM\n      SubFilterBtn.activeFilters.brands.find((x) => x.id == targetId).delete();\n    }\n  };\n\n  /**\n   * @property {function} subFilter\n   * Loops over checked and unchecked checkboxes of both Color and Brand and alters GlobalFilter accordingly <br>\n   * Then it calls filterProducts function\n   * @returns {void}\n   */\n  subFilter = () => {\n    // Colors\n    Filter.globalFilter.color = [];\n    document.querySelectorAll(\".color-checkbox\").forEach((element) => {\n      if (element.checked) {\n        Filter.globalFilter.color.push(element.id);\n      }\n    });\n    // Brands\n    Filter.globalFilter.brand = [];\n    document.querySelectorAll(\".brand-checkbox\").forEach((element) => {\n      if (element.checked) {\n        Filter.globalFilter.brand.push(element.id);\n      }\n    });\n    this.filterProducts();\n  };\n\n  /**\n   * @property {function} filterProducts\n   * For all filters (color, brand, main category), it add or removes \"hidden\" class according to info in globalFilter object <br>\n   * Then it call sortProducts -> this step is still unsure\n   * @returns {void}\n   */\n  filterProducts = () => {\n    this.allProducts.forEach((element) => {\n      element.classList.remove(\"hidden\");\n\n      // brand\n      if (Filter.globalFilter.brand.length > 0) {\n        if (!Filter.globalFilter.brand.includes(element.dataset.brand)) {\n          element.classList.add(\"hidden\");\n        }\n      }\n      // colors -> check if arrays overlap\n      if (Filter.globalFilter.color.length > 0) {\n        const productColors = element.dataset.color.split(\",\");\n        if (!findCommonElement(productColors, Filter.globalFilter.color)) {\n          element.classList.add(\"hidden\");\n        }\n      }\n      // category\n      if (Filter.globalFilter.category != \"All\") {\n        if (element.dataset.category != Filter.globalFilter.category) {\n          element.classList.add(\"hidden\");\n        }\n      }\n    });\n    this.updateFilterCount();\n    document.querySelector(\"#emptyFilter\").classList.add(\"hidden\");\n    document.querySelectorAll(\".product-card:not(.hidden)\").length === 0\n      ? document.querySelector(\"#emptyFilter\").classList.remove(\"hidden\")\n      : null;\n  };\n\n  /**\n   * @property {function} generateSorter\n   * Looks for sort-radio btn and adds eventlistener <br>\n   * @returns {void}\n   */\n  generateSorter() {\n    document.querySelectorAll(\".sort-radio\").forEach((element) => {\n      element.addEventListener(\"change\", this.sortProducts);\n    });\n  }\n\n  /**\n   * @property {function} sortProducts\n   * Checks global sortOption (either standard one or chosen by user) and sorts allProducts array accordingly <br>\n   * inserts HTML in this order. <br>\n   * @returns {void}\n   */\n  sortProducts = (e) => {\n    Filter.sortOption = e.target.id;\n    switch (Filter.sortOption) {\n      case \"priceLH\":\n        this.allProducts = this.allProducts.sort(function (a, b) {\n          return parseInt(a.dataset.price) >= parseInt(b.dataset.price)\n            ? 1\n            : -1;\n        });\n        break;\n\n      case \"priceHL\":\n        this.allProducts = this.allProducts.sort(function (a, b) {\n          return parseInt(a.dataset.price) <= parseInt(b.dataset.price)\n            ? 1\n            : -1;\n        });\n        break;\n      case \"dateON\":\n        this.allProducts = this.allProducts.sort(function (a, b) {\n          return parseInt(a.dataset.id) >= parseInt(b.dataset.id) ? 1 : -1;\n        });\n        break;\n      case \"dateNO\":\n        this.allProducts = this.allProducts.sort(function (a, b) {\n          return parseInt(a.dataset.id) <= parseInt(b.dataset.id) ? 1 : -1;\n        });\n        break;\n      case \"adminActive\":\n        this.allProducts = this.allProducts.sort(function (a, b) {\n          return parseInt(a.dataset.active) >= parseInt(b.dataset.active)\n            ? 1\n            : -1;\n        });\n        break;\n      default:\n        console.log(\"sorting option not known\");\n        break;\n    }\n\n    document.querySelector(\".grid-container\").innerHTML = \"\";\n\n    this.allProducts.forEach((element) => {\n      document\n        .querySelector(\".grid-container\")\n        .insertAdjacentElement(\"beforeend\", element);\n    });\n  };\n\n  updateFilterCount = () => {\n    document.querySelectorAll(\".subfilter__row\").forEach((element) => {\n      element.classList.remove(\"disabled\");\n    });\n    document.querySelectorAll(\".color-checkbox\").forEach((element) => {\n      element.disabled = false;\n    });\n    document.querySelectorAll(\".brand-checkbox\").forEach((element) => {\n      element.disabled = false;\n    });\n    document.querySelectorAll(\".filterCount\").forEach((element) => {\n      const id = element.parentElement.querySelector(\".color-checkbox\")?.id\n        ? element.parentElement.querySelector(\".color-checkbox\").id\n        : element.parentElement.querySelector(\".brand-checkbox\").id;\n      const updatedCount = this.countFilters(id);\n      if (\n        updatedCount === 0 &&\n        !element.parentElement.firstElementChild.firstElementChild.checked\n      ) {\n        element.parentElement.classList.add(\"disabled\");\n        element.parentElement.querySelector(\n          \".filterAndLabel\"\n        ).firstElementChild.disabled = true;\n      }\n      element.innerHTML = `${updatedCount}`;\n      // console.log(updatedCount);\n    });\n  };\n\n  countFilters(id) {\n    let count = 0;\n    let arr =\n      Filter.globalFilter.category === \"All\"\n        ? [...this.allProducts]\n        : this.allProducts.filter(\n            (x) => x.dataset.category === Filter.globalFilter.category\n          );\n    // in case of colors:  filter arr on active brand and then each color id\n    if (id.startsWith(\"c\")) {\n      if (Filter.globalFilter.brand.length > 0) {\n        arr = arr.filter((x) =>\n          Filter.globalFilter.brand.includes(x.dataset.brand)\n        );\n      }\n      arr = arr.filter((x) => x.dataset.color.split(\",\").includes(id));\n      count = arr.length;\n    }\n    // in case of brands: filter arr on active colors and then each brand id\n    else if (id.startsWith(\"b\")) {\n      if (Filter.globalFilter.color.length > 0) {\n        arr = arr.filter((x) =>\n          findCommonElement(\n            Filter.globalFilter.color,\n            x.dataset.color.split(\",\")\n          )\n        );\n      }\n      arr = arr.filter((x) => x.dataset.brand === id);\n      count = arr.length;\n    }\n    return count;\n  }\n  /*\n    If counter <= elementsPerPage -> all products are shown so \"show more\" not needed\n\n  */\n}\n\nexport default Filter;\n","/**\n * Main index.js file\n * 1. imports Filter,\n * 2. creates Filter instance\n * 3. Adds nav mobile functionality\n */\n\nimport \"../css/style.scss\";\n\nimport Filter from \"./Filter\";\nimport \"animate.css\";\n\n// import Swiper JS\n// import Swiper, { Navigation } from \"swiper\";\n\n// import Swiper styles\n// import \"swiper/css\";\n\nnew Swiper(\".swiperM\", {\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\",\n  },\n});\n\nlet init = false;\nvar swiper = Swiper;\n\nfunction swiperCard() {\n  if (window.innerWidth <= 800) {\n    if (!init) {\n      init = true;\n      swiper = new Swiper(\".swiperD\");\n    }\n  } else if (init) {\n    swiper.destroy();\n    init = false;\n  }\n}\nswiperCard();\nwindow.addEventListener(\"resize\", swiperCard);\n\nconst mainFilter = new Filter();\n\n// Mobile nav\ndocument\n  .querySelector(\".mobile-nav-btn\")\n  .addEventListener(\"click\", openCloseMobileNav);\ndocument\n  .querySelector(\".mobile-home-btn\")\n  .addEventListener(\"click\", openCloseMobileNav);\ndocument\n  .querySelector(\".mobile-products-btn\")\n  .addEventListener(\"click\", openCloseMobileNav);\ndocument\n  .querySelector(\".mobile-contact-btn\")\n  .addEventListener(\"click\", openCloseMobileNav);\ndocument\n  .querySelector(\".overlay\")\n  .addEventListener(\"click\", openCloseMobileNav);\n\ndocument.querySelectorAll(\".logo-btn\").forEach((element) => {\n  element.addEventListener(\"click\", closeMobileNav);\n});\n\nfunction openCloseMobileNav() {\n  document.querySelector(\".nav-container-mobile\").classList.toggle(\"open\");\n  if (\n    document.querySelector(\".nav-container-mobile\").classList.contains(\"open\")\n  ) {\n    document.body.style.overflow = \"hidden\";\n    document.querySelector(\".overlay\").style.opacity = 1;\n    document.querySelector(\".overlay\").style.pointerEvents = \"all\";\n    document.querySelector(\".mobile-nav-btn\").classList.remove(\"fa-bars\");\n    document\n      .querySelector(\".mobile-nav-btn\")\n      .classList.add(\"fa-bars-staggered\");\n  } else {\n    document.body.style.overflow = \"auto\";\n    document.querySelector(\".overlay\").style.opacity = 0;\n    document.querySelector(\".overlay\").style.pointerEvents = \"none\";\n    document.querySelector(\".mobile-nav-btn\").classList.add(\"fa-bars\");\n    document\n      .querySelector(\".mobile-nav-btn\")\n      .classList.remove(\"fa-bars-staggered\");\n  }\n}\n\nfunction closeMobileNav() {\n  if (\n    document.querySelector(\".nav-container-mobile\").classList.contains(\"open\")\n  ) {\n    document.querySelector(\".nav-container-mobile\").classList.remove(\"open\");\n    document.body.style.overflow = \"auto\";\n    document.querySelector(\".overlay\").style.opacity = 0;\n    document.querySelector(\".overlay\").style.pointerEvents = \"none\";\n    document.querySelector(\".mobile-nav-btn\").classList.add(\"fa-bars\");\n    document\n      .querySelector(\".mobile-nav-btn\")\n      .classList.remove(\"fa-bars-staggered\");\n  }\n}\n\n// ---------- MODAL -------->\n// Get the modal\ndocument.querySelectorAll(\".card-front\").forEach((element) => {\n  element.addEventListener(\"click\", (e) => {\n    document\n      .elementsFromPoint(e.clientX, e.clientY)\n      .filter((x) => x.classList.contains(\"product-card\"))[0]\n      .querySelector(\".product-modal\")\n      .showModal();\n    // document.body.style.overflow = \"hidden\";\n  });\n});\n\ndocument.querySelectorAll(\".close\").forEach((element) => {\n  element.addEventListener(\"click\", (e) => {\n    e.target.closest(\".product-modal\").close();\n    // document.body.style.overflow = \"auto\";\n  });\n});\n\nwindow.addEventListener(\"click\", (e) => {\n  if (e.target.classList.contains(\"product-modal\")) {\n    e.target.close();\n    // document.body.style.overflow = \"auto\";\n    // ESCAPE must be added separately\n  }\n});\n\n// ---------- BACK TO PRODUCTS -------->\n// only showing button when scrolling up\nlet lastScrollTop = 0;\nwindow.addEventListener(\"scroll\", function (e) {\n  const scrollTop =\n    document.body.scrollTop || document.documentElement.scrollTop;\n  if (scrollTop < lastScrollTop) {\n    back2prod.style.display = \"block\";\n  } else {\n    back2prod.style.display = \"none\";\n  }\n  lastScrollTop = scrollTop;\n});\n\n// only showing button when scrolling past 1000px\nconst back2prod = document.querySelector(\".grid-container > a\");\nwindow.addEventListener(\"scroll\", function (e) {\n  if (\n    document.body.scrollTop > 1000 ||\n    document.documentElement.scrollTop > 1000\n  ) {\n    back2prod.style.display = \"block\";\n  } else {\n    back2prod.style.display = \"none\";\n  }\n});\n"],"names":["$2eed76fbda3f02d4$export$9e3aca0fbd349e07","array1","array2","i","length","j","$bc4e2df5a1b672ea$var$SubFilterBtn","static","colors","brands","constructor","id","filter","this","ref","init","toLowerCase","startsWith","activeFilters","push","addEventListener","singleBtnDelete","document","querySelector","classList","remove","insertAdjacentHTML","lastChild","checked","$72a85528540e9d6c$export$2e2bcd8739ae039","filterWalkieTalkie","subFilter","delete","parentNode","removeChild","x","add","$bc4e2df5a1b672ea$export$2e2bcd8739ae039","$72a85528540e9d6c$var$Filter","category","brand","color","generateFilterBtns","generateSubFilterBtns","generateSorter","allProducts","querySelectorAll","allProductsArray","updateFilterCount","forEach","element","e","target","globalFilter","dataset","filterProducts","arrowSwitch","direction","nextElementSibling","contains","body","elementsFromPoint","clientX","clientY","find","clearFilters","clearColors","clearBrands","toggleActiveColorBtn","toggleActiveBrandBtn","key","innerHTML","targetId","includes","split","sortProducts","sortOption","sort","a","b","parseInt","price","active","console","log","insertAdjacentElement","disabled","parentElement","updatedCount","countFilters","firstElementChild","count","arr","Swiper","navigation","nextEl","prevEl","$70e14124e9ae7f8e$var$init","$70e14124e9ae7f8e$var$swiper","$70e14124e9ae7f8e$var$swiperCard","window","innerWidth","destroy","$70e14124e9ae7f8e$var$openCloseMobileNav","toggle","style","overflow","opacity","pointerEvents","$70e14124e9ae7f8e$var$closeMobileNav","showModal","closest","close","$70e14124e9ae7f8e$var$lastScrollTop","scrollTop","documentElement","$70e14124e9ae7f8e$var$back2prod","display"],"version":3,"file":"index.js.map"}